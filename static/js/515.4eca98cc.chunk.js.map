{"version":3,"file":"static/js/515.4eca98cc.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/AboutMovie/AboutMovie.styled.jsx","components/AboutMovie/AboutMovie.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.section`\n  padding: 16px 28px;\n`;\n\nexport const LinkBtn = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 700;\n  font-size: 30px;\n  color: black;\n  :hover {\n    color: #C0C0C0;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  margin-top: 16px;\n`;\n\nexport const AddInfoTitle = styled.p`\n  font-size: 16px;\n`;\n\nexport const AddInfoItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const AddInfoWrapper = styled.div`\n  padding: 16px;\n`;\n\nexport const AddInfoItemLink = styled(NavLink)`\n  font-size: 30px;\n  font-weight: 700;\n  text-decoration: none;\n  color: #008080;\n  :hover {\n    color: #C0C0C0;\n  }\n`;\n\nexport const AddInfoUl = styled.ul`\nlist-style: none;\n`;","import styled from '@emotion/styled';\n\nexport const AboutMovieContainer = styled.div`\n  margin-top: 16px;\n  display: flex;\n`;\n\nexport const AboutMovieWrapper = styled.div`\n  margin-left: 16px;\n`;\n\nexport const AboutMovieTitle = styled.h1`\n  font-size: 28px;\n  font-weight: 700;\n  margin-bottom: 16px;\n`;\n\nexport const AboutMovieSubTitle = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 16px;\n`;\n\nexport const AboutMovieDetails = styled.p`\n  font-size: 16px;\n  margin-bottom: 16px;\n  line-height: 1.5;\n`;","import PropTypes from 'prop-types';\n\nimport sorryImage from '../../image/sorry-image.jpg';\nimport { AboutMovieContainer, AboutMovieWrapper, AboutMovieTitle, AboutMovieSubTitle, AboutMovieDetails } from 'components/AboutMovie/AboutMovie.styled';\n\n\nexport const AboutMovie = ({ info }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = info;\n    \n    const baseURL = 'https://image.tmdb.org/t/p/w300';\n\n    const getYear = () => new Date(`${release_date}`).getFullYear();\n    const getScor = () => Math.round(`${vote_average}` * 10);\n\nreturn (\n    <AboutMovieContainer>\n      <img\n        src={poster_path ? `${baseURL}${poster_path}` : sorryImage}\n        alt={original_title}\n        width=\"300\"\n      />\n      <AboutMovieWrapper>\n        <AboutMovieTitle>\n          {original_title} ({getYear()})\n        </AboutMovieTitle>\n        <AboutMovieDetails>User Score : {getScor()}%</AboutMovieDetails>\n        <AboutMovieSubTitle>Overview </AboutMovieSubTitle>\n        <AboutMovieDetails>{overview}</AboutMovieDetails>\n        <AboutMovieSubTitle>Genres</AboutMovieSubTitle>\n        <AboutMovieDetails>\n          {genres.map(genre => genre.name).join(', ')}\n        </AboutMovieDetails>\n      </AboutMovieWrapper>\n    </AboutMovieContainer>\n  );\n};\n\nAboutMovie.propTypes = {\n  original_title: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n  overview: PropTypes.string,\n  poster_path: PropTypes.string,\n  vote_average: PropTypes.number,\n};","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Container, LinkBtn, AddInfo, AddInfoTitle, AddInfoItem, AddInfoWrapper, AddInfoItemLink, AddInfoUl } from 'pages/MovieDetails/MovieDetails.styled';\nimport { AboutMovie } from 'components/AboutMovie/AboutMovie';\n\n\nconst MovieDetails = (id) => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n// useEffect(() => {\n//     getMovieDetails(movieId)\n//       .then(setMovie)\n//       .catch(error => console.log(error));\n//   }, [movieId]);\n\n//    useEffect(() => {\n//     if (movie) {\n//       return;\n//     }\n//     const getDetails = async () => {\n//       try {\n//         const response = await getMovieDetails(movieId);\n//         setMovie(response);\n//       } catch (error) {\n//         console.log(error);\n//       }\n//     };\n\n//     getDetails();\n//   }, [details, movieId]);\n\n//   if (!details) {\n//     return;\n//   }\n \n    useEffect(() => {\n        const uplaodMovieById = async (movieId) => {\n\n            try {\n                const response = await API.getMovieDetails(movieId);\n              setMovie(response);\n              \n            }\n            catch (error) {\n                console.log(error.message);\n            }\n        }\n        uplaodMovieById(movieId);\n    }, [movieId]);\n\n    const from = location.state?.from ?? '/';\n\n    return (\n    <>\n      {movie && (\n        <Container>\n          <LinkBtn to={from}>Go back</LinkBtn>\n          <AboutMovie info={movie}></AboutMovie>\n          <AddInfo>\n            <AddInfoTitle> Additional information</AddInfoTitle>\n            <AddInfoWrapper>\n              <AddInfoUl>\n                <AddInfoItem>\n                  <AddInfoItemLink to=\"cast\" state={{ from }}>\n                    Cast\n                  </AddInfoItemLink>\n                </AddInfoItem>\n                <AddInfoItem>\n                  <AddInfoItemLink to=\"reviews\" state={{ from }}>\n                    Reviews\n                  </AddInfoItemLink>\n                </AddInfoItem>\n              </AddInfoUl>\n            </AddInfoWrapper>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </AddInfo>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n\n\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '623136123c076ad8526bb20a79876cb7';\n\nexport const getMorePopularMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=eng`\n  );\n  console.log(response);\n  return response.data;\n};\n\nexport const getMovieByCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieByReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Container","styled","LinkBtn","NavLink","AddInfo","AddInfoTitle","AddInfoItem","AddInfoWrapper","AddInfoItemLink","AddInfoUl","AboutMovieContainer","AboutMovieWrapper","AboutMovieTitle","AboutMovieSubTitle","AboutMovieDetails","AboutMovie","info","poster_path","original_title","release_date","vote_average","overview","genres","src","sorryImage","alt","width","Date","getFullYear","Math","round","map","genre","name","join","id","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","uplaodMovieById","API","response","console","log","message","from","state","to","Suspense","fallback","BASE_URL","KEY","getMorePopularMovie","axios","data","results","getMovieByQuery","query","getMovieDetails","getMovieByCredits","cast","getMovieByReviews"],"sourceRoot":""}