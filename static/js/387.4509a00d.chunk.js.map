{"version":3,"file":"static/js/387.4509a00d.chunk.js","mappings":"8QAEaA,EAAcC,EAAAA,EAAAA,GAAH,gDAIXC,EAAcD,EAAAA,EAAAA,EAAH,qFAMXE,EAAgBF,EAAAA,EAAAA,EAAH,kE,SC8B1B,EAnCgB,WACZ,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoDH,EAAAA,EAAAA,WAAS,GAA7D,eAAOK,EAAP,KAA2BC,EAA3B,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,WAAOL,GAAP,gGAEWM,EAAAA,GAAsBN,GAFjC,OAENO,EAFM,OAGZR,EAAWQ,GACXJ,GAAsB,GAJV,gDAOZK,QAAQC,IAAI,KAAMC,SAPN,yDAAH,sDAUjBL,EAAYL,EACf,GAAE,CAACA,IAEmB,IAAnBF,EAAQa,QAAgBT,EACjB,6CAIP,wBACKJ,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,UAACtB,EAAD,YACI,UAACG,EAAD,sBAAwBkB,MACxB,SAACnB,EAAD,UAAcoB,MAFAF,EADT,KAQxB,C,8LCtCKG,EAAW,gCACXC,EAAM,mCAECC,EAAmB,mCAAG,oGACVC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFV,cAC3BV,EAD2B,yBAK1BA,EAASa,KAAKC,SALY,2CAAH,qDAQnBC,EAAe,mCAAG,WAAMC,GAAN,uFACNJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACqEM,IAF/D,cACvBhB,EADuB,yBAItBA,EAASa,KAAKC,SAJQ,2CAAH,sDAOfG,EAAe,mCAAG,WAAMX,GAAN,uFACNM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,oBACaI,EADb,kBADM,cACvBV,EADuB,OAI7BC,QAAQC,IAAIF,GAJiB,kBAKtBA,EAASa,MALa,2CAAH,sDAQfK,EAAiB,mCAAG,WAAMZ,GAAN,uFACRM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,4BACqBI,EADrB,oBADQ,cACzBV,EADyB,OAI/BC,QAAQC,IAAIF,GAJmB,kBAKxBA,EAASa,KAAKM,MALU,2CAAH,sDAQjBC,EAAiB,mCAAG,WAAMd,GAAN,uFACRM,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDH,EADC,4BACqBI,EADrB,2BADQ,cACzBV,EADyB,yBAIxBA,EAASa,KAAKC,SAJU,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.li`\n  margin-bottom: 32px;\n`;\n\nexport const RewievsText = styled.p`\n  margin-top: 8px;\n  font-size: 16px;\n  line-height: 1.5;\n`;\n\nexport const ReviewsAuthor = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n`;","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport * as API from 'services/api';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList, RewievsText, ReviewsAuthor } from 'components/Reviews/Reviews.styled';\n\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n    const [isReviewInfoLoaded, setIsReviewInfoLoaded] = useState(false);\n    \n    useEffect(() => {\n        const loadReviews = async (movieId) => {\n            try {\n                const response = await API.getMovieByReviews(movieId);\n                setReviews(response);\n                setIsReviewInfoLoaded(true);\n            }\n            catch (error) {\n                console.log(error.message);\n            }\n        }\n        loadReviews(movieId);\n    }, [movieId])\n\n    if (reviews.length === 0 && isReviewInfoLoaded) {\n        return \"We don't have any reviews for this movie.\";\n    }\n    \n    return (\n        <ul>\n            {reviews.map(({ id, author, content }) => (\n                <ReviewsList key={id}>\n                    <ReviewsAuthor>Author: {author}</ReviewsAuthor>\n                    <RewievsText>{content}</RewievsText>\n                </ReviewsList>\n            ))}\n        </ul>\n    );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviewInfo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '623136123c076ad8526bb20a79876cb7';\n\nexport const getMorePopularMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=eng`\n  );\n  console.log(response);\n  return response.data;\n};\n\nexport const getMovieByCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieByReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["ReviewsList","styled","RewievsText","ReviewsAuthor","useState","reviews","setReviews","movieId","useParams","isReviewInfoLoaded","setIsReviewInfoLoaded","useEffect","loadReviews","API","response","console","log","message","length","map","id","author","content","BASE_URL","KEY","getMorePopularMovie","axios","data","results","getMovieByQuery","query","getMovieDetails","getMovieByCredits","cast","getMovieByReviews"],"sourceRoot":""}