{"version":3,"file":"static/js/691.c5ac757f.chunk.js","mappings":"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","sources":["components/MovieList/Movielist.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-bottom: 0;\n  margin-top: 0;\n  padding-left: 0;  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1200px;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\nexport const Item = styled.li`\n  width: 100px;\n  height: 100px;\n  margin-right: 30px;\n  margin-bottom: 30px;\n  border: 2px solid #417d69;;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px;\n  border-radius: 10px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  font-size: 15px;\n  font-weight: 700;\n  text-decoration: none;\n  &.active {\n    color: #c01062;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #C0C0C0;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, StyledLink } from 'components/MovieList/Movielist.styled';\n\nconst MovieList = ({ films }) => {\n    const location = useLocation();\n  \n    return (\n        <List>\n            {films.map(({ title, id }) => {\n                return (\n                    <Item key={id}>\n                        <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                            {title}\n                        </StyledLink>\n                    </Item>\n                );\n            })}\n        </List>\n        \n    );\n    \n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const MovieHeader = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  color: #C0C0C0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Main = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const FormElement = styled(Form)`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\nexport const FormField = styled(Field)`\n  width: 300px;\n  height: 20px;\n  border-radius: 15px;\n  outline-color: #008B8B;\n  border: none;\n  padding: 10px;\n  font-weight: 500;\n  font-size: 20px;\n  color: #008080\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 120px;\n  height: 40px;\n  position: relative;\n  border: 0;\n  opacity: 0.6;\n  border-radius: 15px;\n  background-color: #008080;\n  color: #008080\n  cursor: pointer;\n  outline: none;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const InfoHeader = styled.p`\n  margin-top: 30px;\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  color: #570434;\n`;","import * as API from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MovieHeader, Main, FormElement, FormField, Button, InfoHeader } from 'pages/Movies/Movies.styled';\nimport { Formik } from 'formik';\nimport  MovieList  from 'components/MovieList/MovieList';\n\n\nconst Movies = () => {\n    // const [query, setQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [isLoading, setIsLoading] = useState(false);\n    // const [error, setError] = useState(null);\n\n\n    useEffect(() => {\n        const userQuery = searchParams.get('query');\n        if (userQuery) {\n            loadingFilms(userQuery);  \n        }\n    },[searchParams]);\n\nconst loadingFilms = async value => {\n        if (value === '') {\n            return;\n        }\n        try {\n            const response = await API.getMovieByQuery(value);\n            setMovies(response);\n            setIsLoading(true);\n        }\n        catch (error) {\n            console.log(error);\n    }\n    } \n\nconst handleSubmit = (values, actions) => {\n\n        actions.resetForm();\n        actions.setSubmitting(false);\n\n        if (values.searchQuery === '') {\n        return;\n        }\n        setSearchParams({ query: values.searchQuery });\n        loadingFilms(values.searchQuery);\n\n    }\n    \n// const handleSubmit = newQuery => {\n//     if (query.toLowerCase() !== newQuery.toLowerCase()) {\n//       setSearchParams({ query: newQuery });\n//       setQuery(newQuery);\n//     }\n//     if (query.trim() === '') {\n//       const message = 'Nothing found =(';\n//       setError(message);\n      \n//     }\n//   };\n\n    return (\n        <Main>\n            <MovieHeader>Movies</MovieHeader>\n            <Formik\n                initialValues={{ searchQuery: searchParams.get('query') || '' }}\n                onSubmit={handleSubmit}\n            >\n                {({ isSubmitting }) => (\n                    <FormElement>\n                        <FormField\n                            name=\"searchQuery\"\n                            type=\"text\"\n                            autoComplete=\"off\"\n                            autoFocus\n                            placeholder=\"Search films\"\n                        />\n                        <Button type=\"submit\" disabled={isSubmitting}>\n                            Search\n                        </Button>\n                    </FormElement>\n                )}\n            </Formik>\n            {movies.lenght === 0 && searchParams.get('query') && isLoading && <InfoHeader>'Nothing found =('</InfoHeader>}\n             <MovieList films={movies} />\n        </Main>\n\n    );\n}\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '623136123c076ad8526bb20a79876cb7';\n\nexport const getMorePopularMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=eng`\n  );\n  console.log(response);\n  return response.data;\n};\n\nexport const getMovieByCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieByReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Item","StyledLink","NavLink","films","location","useLocation","map","title","id","to","state","from","MovieHeader","Main","FormElement","Form","FormField","Field","Button","InfoHeader","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","useEffect","userQuery","get","loadingFilms","value","API","response","console","log","initialValues","searchQuery","onSubmit","values","actions","resetForm","setSubmitting","query","isSubmitting","name","type","autoComplete","autoFocus","placeholder","disabled","lenght","MovieList","BASE_URL","KEY","getMorePopularMovie","axios","data","results","getMovieByQuery","getMovieDetails","getMovieByCredits","cast","getMovieByReviews"],"sourceRoot":""}