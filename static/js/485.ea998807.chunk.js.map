{"version":3,"file":"static/js/485.ea998807.chunk.js","mappings":"oNAGaA,EAAOC,EAAAA,EAAAA,GAAH,+MAWJC,EAAOD,EAAAA,EAAAA,GAAH,yPAaJE,GAAaF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,uO,SCHvB,EApBkB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACP,EAAD,UACKK,EAAMG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACjB,OACI,SAACR,EAAD,WACI,SAACC,EAAD,CAAYQ,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAAhD,SACKG,KAFEC,EAMlB,KAKZ,C,mJCpBYI,EAAOb,EAAAA,EAAAA,KAAH,yHAOJc,EAASd,EAAAA,EAAAA,GAAH,8J,kBCwBnB,EA1Ba,WACT,OAA0Be,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,6GAEUC,EAAAA,KAFV,OAEPC,EAFO,OAGbJ,EAASI,GAHI,gDAObC,QAAQC,IAAR,MAPa,yDAAH,qDAUlBJ,GACH,GAAE,KAIH,UAACL,EAAD,YACE,SAACC,EAAD,8BACA,SAACS,EAAA,EAAD,CAAWnB,MAAOA,MAGvB,C,8LC7BKoB,EAAW,gCACXC,EAAM,mCAECC,EAAmB,mCAAG,oGACVC,EAAAA,GAAAA,IAAA,UAClBH,EADkB,sCACoBC,IAFV,cAC3BL,EAD2B,yBAK1BA,EAASQ,KAAKC,SALY,2CAAH,qDAQnBC,EAAe,mCAAG,WAAMC,GAAN,uFACNJ,EAAAA,GAAAA,IAAA,UAClBH,EADkB,gCACcC,EADd,4DACqEM,IAF/D,cACvBX,EADuB,yBAItBA,EAASQ,KAAKC,SAJQ,2CAAH,sDAOfG,EAAe,mCAAG,WAAMvB,GAAN,uFACNkB,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDf,EADC,oBACagB,EADb,kBADM,cACvBL,EADuB,OAI7BC,QAAQC,IAAIF,GAJiB,kBAKtBA,EAASQ,MALa,2CAAH,sDAQfK,EAAiB,mCAAG,WAAMxB,GAAN,uFACRkB,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDf,EADC,4BACqBgB,EADrB,oBADQ,cACzBL,EADyB,OAI/BC,QAAQC,IAAIF,GAJmB,kBAKxBA,EAASQ,KAAKM,MALU,2CAAH,sDAQjBC,EAAiB,mCAAG,WAAM1B,GAAN,uFACRkB,EAAAA,GAAAA,IAAA,UAClBH,EADkB,iBACDf,EADC,4BACqBgB,EADrB,2BADQ,cACzBL,EADyB,yBAIxBA,EAASQ,KAAKC,SAJU,2CAAH,qD","sources":["components/MovieList/Movielist.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  margin-bottom: 0;\n  margin-top: 0;\n  padding-left: 0;  \n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 1200px;\n  flex-wrap: wrap;\n  gap: 12px;\n`;\nexport const Item = styled.li`\n  width: 100px;\n  height: 100px;\n  margin-right: 30px;\n  margin-bottom: 30px;\n  border: 2px solid #417d69;;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px;\n  border-radius: 10px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n  font-size: 15px;\n  font-weight: 700;\n  text-decoration: none;\n  &.active {\n    color: #c01062;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #C0C0C0;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, StyledLink } from 'components/MovieList/Movielist.styled';\n\nconst MovieList = ({ films }) => {\n    const location = useLocation();\n  \n    return (\n        <List>\n            {films.map(({ title, id }) => {\n                return (\n                    <Item key={id}>\n                        <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                            {title}\n                        </StyledLink>\n                    </Item>\n                );\n            })}\n        </List>\n        \n    );\n    \n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const Header = styled.h1`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  color: #778899;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import * as API from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { Main, Header } from 'pages/Home/Home.styled';\nimport  MovieList  from 'components/MovieList/MovieList';\n\n\n\nconst Home = () => {\n    const [films, setFilms] = useState([]);\n    \n    useEffect(() => {\n        const recivedFilms = async () => {\n            try {\n                const response = await API.getMorePopularMovie();\n                setFilms(response);\n                // console.log(response);\n\n            } catch (error) {\n                console.log(error);\n            }            \n        }\n        recivedFilms();\n    }, []);\n\n\n    return (\n    <Main>\n      <Header>Trending today</Header>\n      <MovieList films={films} />\n    </Main>\n   );\n};\n\nexport default Home;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '623136123c076ad8526bb20a79876cb7';\n\nexport const getMorePopularMovie = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}`\n  );\n\n  return response.data.results;\n};\n\nexport const getMovieByQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=eng`\n  );\n  console.log(response);\n  return response.data;\n};\n\nexport const getMovieByCredits = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  console.log(response);\n  return response.data.cast;\n};\n\nexport const getMovieByReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","Item","StyledLink","NavLink","films","location","useLocation","map","title","id","to","state","from","Main","Header","useState","setFilms","useEffect","recivedFilms","API","response","console","log","MovieList","BASE_URL","KEY","getMorePopularMovie","axios","data","results","getMovieByQuery","query","getMovieDetails","getMovieByCredits","cast","getMovieByReviews"],"sourceRoot":""}